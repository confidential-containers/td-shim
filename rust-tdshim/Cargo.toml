[package]
name = "rust-tdshim"
version = "0.1.0"
edition = "2018"

# add build process
build = "build.rs"

[features]
default = ["boot-kernel", "cet-ss", "main", "secure-boot"]
boot-kernel = ["td-layout/boot-kernel"]
cet-ss = []
secure-boot = ["der", "td-shim-enroll-key", "td-shim-sign-payload"]
tdx = ["tdx-tdcall", "td-exception/tdx", "td-logger/tdx", "x86"]
main = [
    "elf-loader",
    "linked_list_allocator",
    "pe-loader",
    "r-efi",
    "ring",
    "spin",
    "td-exception",
    "td-layout",
    "td-logger",
    "td-paging",
    "x86",
    "x86_64",
]

[build-dependencies]
cc = { git = "https://github.com/jyao1/cc-rs.git", branch = "uefi_support" }
td-layout = { path = "../td-layout" }
tdx-tdcall = { path = "../tdx-tdcall" }

[dependencies]
lazy_static = { version = "1.4.0", features = ["spin_no_std"] }
log = "0.4.13"
scroll = { version = "0.10", default-features = false, features = ["derive"] }
uefi-pi =  { path = "../uefi-pi" }
zerocopy = "0.6.0"

elf-loader = { path = "../elf-loader", optional = true }
linked_list_allocator = { version = "0.9.0", optional = true }
ring = { git = "https://github.com/jyao1/ring.git", branch = "uefi_support", default-features = false, features = ["alloc"], optional = true }
pe-loader = { path = "../pe-loader", optional = true }
r-efi = { version = "3.2.0", optional = true }
spin = { version = "0.9.2", optional = true }
td-exception =  { path = "../td-exception", features = ["tdx"], optional = true }
td-layout = { path = "../td-layout", optional = true }
td-logger =  { path = "../td-logger", optional = true }
td-paging = { path = "../td-paging", optional = true }
x86 = { version ="0.44.0", optional = true }
# Lock down to 0.44, otherwise it depends on inline asm
x86_64 = { version = "=0.14.6", optional = true }

# secure boot
der = {version = "0.4.5", features = ["derive", "alloc"], optional = true}
td-shim-enroll-key = { path = "../td-shim-enroll-key", default-features = false, optional = true }
td-shim-sign-payload = { path = "../td-shim-sign-payload", default-features = false, optional = true }

# TDX
tdx-tdcall = { path = "../tdx-tdcall", optional = true }

