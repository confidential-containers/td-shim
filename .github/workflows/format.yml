on: [push, pull_request]

name: Format and Clippy

env:
  AS: nasm
  AR: llvm-ar
  CC: clang
  RUST_TOOLCHAIN: 1.83.0

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Install first since it's needed to build NASM
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "10.0"
          directory: ${{ runner.temp }}/llvm

      - name: install NASM
        uses: ilammy/setup-nasm@v1

      - name: Install toolchain with clippy available
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: clippy

      - name: Add target
        run:  rustup target add x86_64-unknown-none
          
      - name: Preparation Work
        run: make preparation

      - name: Run cargo clippy
        run: cargo clippy --all-features --target=x86_64-unknown-none

  rustfmt:
    name: Format
    runs-on: ubuntu-20.04
    steps:

      # Install first since it's needed to build NASM
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "10.0"
          directory: ${{ runner.temp }}/llvm

      - name: install NASM
        uses: ilammy/setup-nasm@v1

      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install toolchain with rustfmt available
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt

      - name: Preparation Work
        run: make preparation

      - name: Run cargo check
        run: cargo check

      - name: Run cargo fmt
        run: cargo fmt --all -- --check
