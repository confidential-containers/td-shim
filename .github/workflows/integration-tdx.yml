on:
  push:
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"
  workflow_dispatch:

name: Ingetration Test on TDX Server

env:
  AS: nasm
  AR_x86_64_unknown_uefi: llvm-ar
  CC_x86_64_unknown_uefi: clang
  RUST_TOOLCHAIN: nightly-2022-04-07
  TOOLCHAIN_PROFILE: minimal

jobs:
  system_compile:
    name: Run TDX Integration Test
    runs-on: [self-hosted, tdx]
    timeout-minutes: 30

    steps:
      # Install first since it's needed to build NASM
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "10.0"
          directory: ${{ runner.temp }}/llvm

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: rust-src, llvm-tools-preview

      - name: Run cargo install cargo-xbuild
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-xbuild

      - name: Build PE format payload with boot-kernel support
        run: bash sh_script/build_final.sh pe_boot_kernel

      - name: Run Tests - Boot Kernel (cpus=1 mem=2G)
        run: bash sh_script/integration_tdx.sh -f target/x86_64-unknown-uefi/release/final-pe-boot-kernel.bin
      
      - name: Run Tests - Boot Kernel (cpus=2 mem=8G)
        run: bash sh_script/integration_tdx.sh -c 2 -m 8G -f target/x86_64-unknown-uefi/release/final-pe-boot-kernel.bin

      - name: Run Tests - Boot Kernel (cpus=4 mem=16G)
        run: bash sh_script/integration_tdx.sh -c 4 -m 16G -f target/x86_64-unknown-uefi/release/final-pe-boot-kernel.bin

      - name: Build PE format payload with test TD payload
        run: bash sh_script/build_final.sh pe_test
      
      - name: Run Tests - Run test TD payload
        run: bash sh_script/integration_tdx.sh -f target/x86_64-unknown-uefi/release/final-pe-test.bin