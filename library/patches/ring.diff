diff --git a/Cargo.toml b/Cargo.toml
index c9daac82e..f9e578e39 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -302,6 +302,7 @@ name = "ring"
 
 [dependencies]
 untrusted = { version = "0.7.1" }
+getrandom = { version = "0.2.8", features = ["rdrand"] }
 
 [target.'cfg(any(target_arch = "x86",target_arch = "x86_64", all(any(target_arch = "aarch64", target_arch = "arm"), any(target_os = "android", target_os = "fuchsia", target_os = "linux"))))'.dependencies]
 spin = { version = "0.5.2", default-features = false }
@@ -327,7 +328,7 @@ libc = { version = "0.2.80", default-features = false }
 
 # Keep this in sync with `[dependencies]` in pregenerate_asm/Cargo.toml.
 [build-dependencies]
-cc = { version = "1.0.62", default-features = false }
+cc = { version = "1.0.63", default-features = false }
 
 [features]
 # These features are documented in the top-level module's documentation.
diff --git a/build.rs b/build.rs
index a5a8e1995..c67e4bfb0 100644
--- a/build.rs
+++ b/build.rs
@@ -580,7 +580,7 @@ fn cc(
     //
     // poly1305_vec.c requires <emmintrin.h> which requires <stdlib.h>.
     if (target.arch == "wasm32" && target.os == "unknown")
-        || (target.os == "linux" && is_musl && target.arch != "x86_64")
+        || (target.os == "linux" && is_musl && target.arch != "x86_64" || target.os == "none")
     {
         if let Ok(compiler) = c.try_get_compiler() {
             // TODO: Expand this to non-clang compilers in 0.17.0 if practical.
@@ -589,6 +589,9 @@ fn cc(
                 let _ = c.define("GFp_NOSTDLIBINC", "1");
             }
         }
+        if target.os == "none" {
+            let _ = c.flag("-ffreestanding");
+        }
     }
 
     if warnings_are_errors {
@@ -626,7 +629,7 @@ fn nasm(file: &Path, arch: &str, out_file: &Path) -> Command {
         "x86" => ("win32"),
         _ => panic!("unsupported arch: {}", arch),
     };
-    let mut c = Command::new("./target/tools/nasm");
+    let mut c = Command::new("nasm");
     let _ = c
         .arg("-o")
         .arg(out_file.to_str().expect("Invalid path"))
diff --git a/src/rand.rs b/src/rand.rs
index 9d1864fa1..6ac5cc727 100644
--- a/src/rand.rs
+++ b/src/rand.rs
@@ -195,6 +195,9 @@ use self::darwin::fill as fill_impl;
 #[cfg(any(target_os = "fuchsia"))]
 use self::fuchsia::fill as fill_impl;
 
+#[cfg(any(target_os = "none"))]
+use self::no_std::fill as fill_impl;
+
 #[cfg(any(target_os = "android", target_os = "linux"))]
 mod sysrand_chunk {
     use crate::{c, error};
@@ -431,3 +434,22 @@ mod fuchsia {
         fn zx_cprng_draw(buffer: *mut u8, length: usize);
     }
 }
+
+#[cfg(any(target_os = "none"))]
+mod no_std {
+    use crate::error;
+
+    pub fn fill(dest: &mut [u8]) -> Result<(), error::Unspecified> {
+        fill_impl(dest)
+    }
+
+    #[cfg(not(any(target_arch = "x86_64")))]
+    fn fill_impl(dest: &mut [u8]) -> Result<(), error::Unspecified> {
+        Err(error::Unspecified)
+    }
+
+    #[cfg(any(target_arch = "x86_64"))]
+    fn fill_impl(dest: &mut [u8]) -> Result<(), error::Unspecified> {
+        getrandom::getrandom(dest).map_err(|_| error::Unspecified)
+    }
+}
